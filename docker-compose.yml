version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: bridge
      POSTGRES_USER: bridge_user
      POSTGRES_PASSWORD: bridge_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bridge_user -d bridge"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - bridge_network

  bridge1:
    build: .
    environment:
      PORT: 8081
      POSTGRES_URI: "postgres://bridge_user:bridge_password@postgres:5432/bridge?sslmode=disable"
      CORS_ENABLE: "true"
      HEARTBEAT_INTERVAL: 10
      RPS_LIMIT: 1000
      CONNECTIONS_LIMIT: 200
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bridge_network
    restart: unless-stopped

  bridge2:
    build: .
    environment:
      PORT: 8081
      POSTGRES_URI: "postgres://bridge_user:bridge_password@postgres:5432/bridge?sslmode=disable"
      CORS_ENABLE: "true"
      HEARTBEAT_INTERVAL: 10
      RPS_LIMIT: 1000
      CONNECTIONS_LIMIT: 200
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bridge_network
    restart: unless-stopped

  bridge3:
    build: .
    environment:
      PORT: 8081
      POSTGRES_URI: "postgres://bridge_user:bridge_password@postgres:5432/bridge?sslmode=disable"
      CORS_ENABLE: "true"
      HEARTBEAT_INTERVAL: 10
      RPS_LIMIT: 1000
      CONNECTIONS_LIMIT: 200
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bridge_network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - bridge1
      - bridge2
      - bridge3
    networks:
      - bridge_network
    restart: unless-stopped

  nats:
    image: nats:2.10-alpine
    command: ["-js", "-m", "8222"]
    ports:
      - "4222:4222" # server port
      - "8222:8222" # monitoring port
    networks:
      - bridge_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 5s
      timeout: 5s
      retries: 5

  bridge-nats:
    build: .
    environment:
      PORT: 8081
      NATS_URI: "nats://nats:4222"
      # POSTGRES_URI: "nats://nats:4222"
      CORS_ENABLE: "true"
      HEARTBEAT_INTERVAL: 10
      RPS_LIMIT: 1000
      CONNECTIONS_LIMIT: 200
    depends_on:
      nats:
        condition: service_healthy
    networks:
      - bridge_network
    restart: unless-stopped
    profiles:
      - nats

volumes:
  postgres_data:

networks:
  bridge_network:
    driver: bridge
