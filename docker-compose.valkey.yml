version: '3.8'

services:
  valkey:
    image: valkey/valkey:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - valkey_data:/data
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - bridge_network
    restart: unless-stopped

  bridge1:
    build: .
    environment:
      PORT: 8081
      STORAGE_TYPE: valkey
      VALKEY_URI: "valkey://valkey:6379"
      CORS_ENABLE: "true"
      HEARTBEAT_INTERVAL: 10
      RPS_LIMIT: 1000
      CONNECTIONS_LIMIT: 200
    depends_on:
      valkey:
        condition: service_healthy
    networks:
      - bridge_network
    restart: unless-stopped

  bridge2:
    build: .
    environment:
      PORT: 8081
      STORAGE_TYPE: valkey
      VALKEY_URI: "valkey://valkey:6379"
      CORS_ENABLE: "true"
      HEARTBEAT_INTERVAL: 10
      RPS_LIMIT: 1000
      CONNECTIONS_LIMIT: 200
    depends_on:
      valkey:
        condition: service_healthy
    networks:
      - bridge_network
    restart: unless-stopped

  bridge3:
    build: .
    environment:
      PORT: 8081
      STORAGE_TYPE: valkey
      VALKEY_URI: "valkey://valkey:6379"
      CORS_ENABLE: "true"
      HEARTBEAT_INTERVAL: 10
      RPS_LIMIT: 1000
      CONNECTIONS_LIMIT: 200
    depends_on:
      valkey:
        condition: service_healthy
    networks:
      - bridge_network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - bridge1
      - bridge2
      - bridge3
    networks:
      - bridge_network
    restart: unless-stopped

volumes:
  valkey_data:

networks:
  bridge_network:
    driver: bridge